return {
  -- -- Syntax
  -- {
  --     "nvim-treesitter/nvim-treesitter",
  --     version = false, -- last release is way too old and doesn't work on Windows
  --     build = ":TSUpdate",
  --     event = { "VeryLazy" },
  --     lazy = vim.fn.argc(-1) == 0, -- load treesitter early when opening a file from the cmdline
  --     init = function(plugin)
  --         -- PERF: add nvim-treesitter queries to the rtp and it's custom query predicates early
  --         -- This is needed because a bunch of plugins no longer `require("nvim-treesitter")`, which
  --         -- no longer trigger the **nvim-treesitter** module to be loaded in time.
  --         -- Luckily, the only things that those plugins need are the custom queries, which we make available
  --         -- during startup.
  --         require("lazy.core.loader").add_to_rtp(plugin)
  --         require("nvim-treesitter.query_predicates")
  --     end,
  --     cmd = { "TSUpdateSync", "TSUpdate", "TSInstall" },
  --     keys = {
  --         { "<c-space>", desc = "Increment Selection" },
  --         { "<bs>", desc = "Decrement Selection", mode = "x" },
  --     },
  --     opts_extend = { "ensure_installed" },
  --     ---@type TSConfig
  --     ---@diagnostic disable-next-line: missing-fields
  --     opts = {
  --         highlight = { enable = true },
  --         indent = { enable = true },
  --         ensure_installed = {
  --             "bash",
  --             "c",
  --             "diff",
  --             "html",
  --             "javascript",
  --             "jsdoc",
  --             "json",
  --             "jsonc",
  --             "lua",
  --             "luadoc",
  --             "luap",
  --             "markdown",
  --             "markdown_inline",
  --             "printf",
  --             "python",
  --             "query",
  --             "regex",
  --             "toml",
  --             "tsx",
  --             "typescript",
  --             "vim",
  --             "vimdoc",
  --             "xml",
  --             "yaml",
  --         },
  --         incremental_selection = {
  --             enable = true,
  --             keymaps = {
  --                 init_selection = "<C-space>",
  --                 node_incremental = "<C-space>",
  --                 scope_incremental = false,
  --                 node_decremental = "<bs>",
  --             },
  --         },
  --         textobjects = {
  --             move = {
  --                 enable = true,
  --                 goto_next_start = { ["]f"] = "@function.outer", ["]c"] = "@class.outer", ["]a"] = "@parameter.inner" },
  --                 goto_next_end = { ["]F"] = "@function.outer", ["]C"] = "@class.outer", ["]A"] = "@parameter.inner" },
  --                 goto_previous_start = { ["[f"] = "@function.outer", ["[c"] = "@class.outer", ["[a"] = "@parameter.inner" },
  --                 goto_previous_end = { ["[F"] = "@function.outer", ["[C"] = "@class.outer", ["[A"] = "@parameter.inner" },
  --             },
  --         },
  --     },
  --     ---@param opts TSConfig
  --     config = function(_, opts)
  --         require("nvim-treesitter.configs").setup(opts)
  --     end,
  -- },
  --
  -- --- text objects
  -- {
  --     "nvim-treesitter/nvim-treesitter-textobjects",
  --     event = "VeryLazy",
  --     dependencies = {"nvim-treesitter/nvim-treesitter"},
  --     config = function()
  --         -- When in diff mode, we want to use the default
  --         -- vim text objects c & C instead of the treesitter ones.
  --         local move = require("nvim-treesitter.textobjects.move") ---@type table<string,fun(...)>
  --         local configs = require("nvim-treesitter.configs")
  --         for name, fn in pairs(move) do
  --             if name:find("goto") == 1 then
  --                 move[name] = function(q, ...)
  --                     if vim.wo.diff then
  --                         local config = configs.get_module("textobjects.move")[name] ---@type table<string,string>
  --                         for key, query in pairs(config or {}) do
  --                             if q == query and key:find("[%]%[][cC]") then
  --                                 vim.cmd("normal! " .. key)
  --                                 return
  --                             end
  --                         end
  --                     end
  --                     return fn(q, ...)
  --                 end
  --             end
  --         end
  --     end,
  -- },
  --
  -- --- context
  -- {
  --     "nvim-treesitter/nvim-treesitter-context",
  --     -- event = "LazyFile",
  --     event = "VeryLazy",
  --     opts = function()
  --         local tsc = require("treesitter-context")
  --         if Snacks then
  --             Snacks.toggle({
  --                 name = "Treesitter Context",
  --                 get = tsc.enabled,
  --                 set = function(state)
  --                     if state then
  --                         tsc.enable()
  --                     else
  --                         tsc.disable()
  --                     end
  --                 end,
  --             }):map("<leader>ut")
  --         end
  --         return {
  --             enable = true, -- Enable this plugin (Can be enabled/disabled later via commands)
  --             multiwindow = false, -- Enable multiwindow support.
  --             max_lines = 4, -- How many lines the window should span. Values <= 0 mean no limit.
  --             min_window_height = 0, -- Minimum editor window height to enable context. Values <= 0 mean no limit.
  --             line_numbers = true,
  --             multiline_threshold = 20, -- Maximum number of lines to show for a single context
  --             trim_scope = 'outer', -- Which context lines to discard if `max_lines` is exceeded. Choices: 'inner', 'outer'
  --             mode = 'topline',  -- Line used to calculate context. Choices: 'cursor', 'topline'
  --             -- Separator between context and content. Should be a single character string, like '-'.
  --             -- When separator is set, the context will only show up when there are at least 2 lines above cursorline.
  --             separator = nil,
  --             zindex = 20, -- The Z-index of the context window
  --             on_attach = nil, -- (fun(buf: integer): boolean) return false to disable attaching
  --         }
  --     end,
  -- },
  --
  -- -- Autotag
  -- {
  --     "windwp/nvim-ts-autotag",
  --     event = "VeryLazy",
  --     dependencies = {"nvim-treesitter/nvim-treesitter"},
  --     opts = {},
  -- }
  --
}
